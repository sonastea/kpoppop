services:
  database:
    container_name: kpoppop_db
    image: 'postgres:16.2'
    restart: unless-stopped
    env_file:
      - database.env
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data

  server:
    container_name: kpoppop_server
    image: kpoppop_backend
    env_file: ./server/.env
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - NODE_ENV=${NODE_ENV:-development}
    build:
      context: ./server
      args:
        - NODE_ENV=${NODE_ENV}
    restart: unless-stopped
    ports:
      - '5000:5000'
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - database
      - redis
      - private-detector

  private-detector:
    container_name: kpoppop_private_detector
    image: vazhega/private-detector:0.2.0
    environment:
      - MODEL_NAME=private_detector
    ports:
      - '127.0.0.1:8501:8501'
    restart: unless-stopped

  redis:
    container_name: kpoppop_redis
    command: redis-server --save 20 1
    image: 'redis:7.2'
    ports:
      - '127.0.0.1:6379:6379'
    volumes:
      - ./server/redis_data:/data
    restart: unless-stopped

  client:
    container_name: kpoppop_client
    image: kpoppop_frontend
    env_file: ./client/.env
    build:
      context: ./client
      args:
        - NODE_ENV=${NODE_ENV}
    restart: unless-stopped
    ports:
      - '3000:3000'
    tty: true
    volumes:
      - /app/node_modules
    depends_on:
      - server

volumes:
  pgdata:
  postgres: {}
  server: {}
